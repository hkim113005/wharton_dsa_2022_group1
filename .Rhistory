knitr::opts_chunk$set(echo = F, cache = T, fig.width=8, fig.height=4)
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ggplot2, dplyr, glmnet, car, tidyverse, gridExtra, ggrepel, plotly, skimr, data.table, xtable)
set.seed(9)
dataset.1 <- fread("group1_hit_songs_dataset_ml_1.csv")
dataset.5 <- fread("group1_hit_songs_dataset_ml_5.csv")
hist(dataset.1$popularity)
hist(dataset.5$log_popularity)
nrow(dataset.1)
summary(dataset.1)
nrow(dataset.5)
summary(dataset.5)
knitr::opts_chunk$set(echo = F, cache = T, fig.width=8, fig.height=4)
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ggplot2, dplyr, glmnet, car, tidyverse, gridExtra, ggrepel, plotly, skimr, data.table, xtable)
set.seed(9)
dataset.1 <- fread("group1_hit_songs_dataset_ml_1.csv")
dataset.5 <- fread("group1_hit_songs_dataset_ml_5.csv")
hist(dataset.1$popularity)
hist(dataset.5$log_popularity)
nrow(dataset.5)
summary(dataset.1)
summary(dataset.5)
n <- nrow(dataset.5)
dataset.5.train.index <- sample(n, n * 0.75)
dataset.5.train <- dataset.5[dataset.5.train.index, ]
dataset.5.test <- dataset.5.train <- dataset.5[-dataset.5.train.index, ]
fit.lm.5 <- lm(hitness ~ ., dataset.5.train)
summary(fit.lm.5)
Anova(fit.lm.5)
plot(fit.lm.5)
fit.lm.5.accuracy <- 1 - mean(abs(round(predict(fit.lm.5, dataset.5.test)) - dataset.5.test$hitness))
fit.glm.5 <- glm(hitness ~ ., dataset.5.train, family = binomial(logit))
summary(fit.glm.5)
Anova(fit.glm.5)
plot(fit.glm.5)
fit.glm.5.accuracy <- 1 - mean(abs(round(predict(fit.glm.5, dataset.5.test, type = "response")) - dataset.5.test$hitness))
x.5 <- data.matrix(dataset.5.train %>% select(-hitness))
y.5 <- dataset.5.train %>% select(hitness) %>% .$hitness
cv_model.5 <- cv.glmnet(x.5, y.5, alpha = 1)
# plot(cv_model)
fit.lasso.5 <- glmnet(x.5, y.5, alpha = 1, lambda = cv_model.5$lambda.1se)
fit.lasso.5.coef <- coef(fit.lasso.5)
fit.lasso.5.coef <- fit.lasso.5.coef[which(fit.lasso.5.coef != 0), ]
fit.lasso.5.names <- rownames(data.matrix(fit.lasso.5.coef))[-1]
predict.lasso.5 <- predict(fit.lasso.5, newx = data.matrix(dataset.5.test %>% select(-hitness)), type = "response")
fit.lasso.5.accuracy <- 1 - mean(abs(round(predict.lasso.5) - dataset.5.test$hitness))
knitr::opts_chunk$set(echo = F, cache = T, fig.width=8, fig.height=4)
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ggplot2, dplyr, glmnet, car, tidyverse, gridExtra, ggrepel, plotly, skimr, data.table, xtable)
set.seed(9)
dataset.1 <- fread("group1_hit_songs_dataset_ml_1.csv")
dataset.5 <- fread("group1_hit_songs_dataset_ml_5.csv")
hist(dataset.1$popularity)
hist(dataset.5$log_popularity)
nrow(dataset.5)
summary(dataset.1)
summary(dataset.5)
n <- nrow(dataset.5)
dataset.5.train.index <- sample(n, n * 0.75)
dataset.5.train <- dataset.5[dataset.5.train.index, ]
dataset.5.test <- dataset.5.train <- dataset.5[-dataset.5.train.index, ]
fit.lm.5 <- lm(hitness ~ ., dataset.5.train)
summary(fit.lm.5)
Anova(fit.lm.5)
plot(fit.lm.5)
fit.lm.5.accuracy <- 1 - mean(abs(round(predict(fit.lm.5, dataset.5.test)) - dataset.5.test$hitness))
fit.glm.5 <- glm(hitness ~ ., dataset.5.train, family = binomial(logit))
summary(fit.glm.5)
Anova(fit.glm.5)
plot(fit.glm.5)
fit.glm.5.accuracy <- 1 - mean(abs(round(predict(fit.glm.5, dataset.5.test, type = "response")) - dataset.5.test$hitness))
x.5 <- data.matrix(dataset.5.train %>% select(-hitness))
y.5 <- dataset.5.train %>% select(hitness) %>% .$hitness
cv_model.5 <- cv.glmnet(x.5, y.5, alpha = 1)
plot(cv_model)
knitr::opts_chunk$set(echo = F, cache = T, fig.width=8, fig.height=4)
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ggplot2, dplyr, glmnet, car, tidyverse, gridExtra, ggrepel, plotly, skimr, data.table, xtable)
set.seed(9)
dataset.1 <- fread("group1_hit_songs_dataset_ml_1.csv")
dataset.5 <- fread("group1_hit_songs_dataset_ml_5.csv")
hist(dataset.1$popularity)
hist(dataset.5$log_popularity)
nrow(dataset.5)
summary(dataset.1)
summary(dataset.5)
n <- nrow(dataset.5)
dataset.5.train.index <- sample(n, n * 0.75)
dataset.5.train <- dataset.5[dataset.5.train.index, ]
dataset.5.test <- dataset.5.train <- dataset.5[-dataset.5.train.index, ]
fit.lm.5 <- lm(hitness ~ ., dataset.5.train)
summary(fit.lm.5)
Anova(fit.lm.5)
plot(fit.lm.5)
fit.lm.5.accuracy <- 1 - mean(abs(round(predict(fit.lm.5, dataset.5.test)) - dataset.5.test$hitness))
fit.glm.5 <- glm(hitness ~ ., dataset.5.train, family = binomial(logit))
summary(fit.glm.5)
Anova(fit.glm.5)
plot(fit.glm.5)
fit.glm.5.accuracy <- 1 - mean(abs(round(predict(fit.glm.5, dataset.5.test, type = "response")) - dataset.5.test$hitness))
x.5 <- data.matrix(dataset.5.train %>% select(-hitness))
y.5 <- dataset.5.train %>% select(hitness) %>% .$hitness
cv_model.5 <- cv.glmnet(x.5, y.5, alpha = 1)
plot(cv_model.5)
fit.lasso.5 <- glmnet(x.5, y.5, alpha = 1, lambda = cv_model.5$lambda.1se)
fit.lasso.5.coef <- coef(fit.lasso.5)
fit.lasso.5.coef <- fit.lasso.5.coef[which(fit.lasso.5.coef != 0), ]
fit.lasso.5.names <- rownames(data.matrix(fit.lasso.5.coef))[-1]
predict.lasso.5 <- predict(fit.lasso.5, newx = data.matrix(dataset.5.test %>% select(-hitness)), type = "response")
fit.lasso.5.accuracy <- 1 - mean(abs(round(predict.lasso.5) - dataset.5.test$hitness))
fit.lasso.glm.5 <- glm(as.formula(paste("hitness ~", paste(fit.lasso.5.names, collapse = " + "))), dataset.5.train, family = binomial(logit))
predict.lasso.glm.7 <- predict(fit.lasso.glm.5, dataset.5.test %>% select(fit.lasso.5.names), type = "response")
fit.lasso.glm.5.accuracy <- 1 - mean(abs(round(predict.lasso.glm.7) - dataset.5.test$hitness))
Anova(fit.lasso.glm.5)
fit.lasso.glm.5 <- glm(as.formula(paste("hitness ~", paste(fit.lasso.5.names, collapse = " + "))), dataset.5.train, family = binomial(logit))
predict.lasso.glm.7 <- predict(fit.lasso.glm.5, dataset.5.test %>% select(fit.lasso.5.names), type = "response")
fit.lasso.glm.5.accuracy <- 1 - mean(abs(round(predict.lasso.glm.7) - dataset.5.test$hitness))
summary(fit.lasso.glm.5)
Anova(fit.lasso.glm.5)
fit.lm.5.accuracy
summary(fit.lm.5)
fit.lm.5.accuracy
summary(fit.lm.5)
Anova(fit.lm.5)
plot(fit.lm.5)
knitr::opts_chunk$set(echo = F, comment = NA, cache = T, fig.width=8, fig.height=4)
if(!require('pacman')) {
install.packages('pacman')
}
pacman::p_load(ggplot2, dplyr, glmnet, car, tidyverse, gridExtra, ggrepel, plotly, skimr, data.table, xtable)
set.seed(9)
?hist
hist(dataset.5$log_tempo, main = "Log of Tempo")
summary(dataset.1)
fit.lasso.glm.5 <- glm(as.formula(paste("hitness ~", paste(fit.lasso.5.names, collapse = " + "))), dataset.5.train, family = binomial(logit))
predict.lasso.glm.5 <- predict(fit.lasso.glm.5, dataset.5.test %>% select(fit.lasso.5.names), type = "response")
fit.lasso.glm.5.accuracy <- 1 - mean(abs(round(predict.lasso.glm.5) - dataset.5.test$hitness))
